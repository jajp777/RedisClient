proc QuestionRequest($hashtag, questionId, userId)

	local function GetUserName(hkey)
		local uid = redis.call('HGET', hkey, 'UserId')
		return redis.call('HGET', hashtag .. ':uidmapping', uid)
	end

	local question = {}
	local qkey = hashtag .. ':post:' .. questionId
	local qtagkey = hashtag .. ':tags:' .. questionId
	local qvoteskey = hashtag .. ':votes:' .. questionId 
	local closeVotesKey = hashtag .. ':close:' .. questionId
	local answersKey = hashtag .. ':answers:' .. questionId

	local exists = redis.call('EXISTS', qkey)
	if ( exists == 0 ) then
		return redis.error_reply('NOTFOUND')
	end

	question[1] = redis.call('HGETALL', qkey)
	question[2] = GetUserName(qkey)
	question[3] = redis.call('SMEMBERS',  qtagkey)
	question[4] = redis.call('ZSCORE', qvoteskey, userId)
	question[5] = redis.call('SISMEMBER', closeVotesKey, userId)
	 
	local answers = {}
	local answerIds = redis.call('SMEMBERS', answersKey)
	for index, id in ipairs(answerIds) do
		local answer = {}
		local answerKey = hashtag .. ':answer:' .. id
		local answerVotesKey = hashtag .. ':avotes:' .. id

		answer[1] = redis.call('HGETALL', answerKey)
		answer[2] = GetUserName(answerKey)
		answer[3] = redis.call('ZSCORE', answerVotesKey, userId)
		answers[index] = answer
	end
	question[6] = answers

	return question
endproc